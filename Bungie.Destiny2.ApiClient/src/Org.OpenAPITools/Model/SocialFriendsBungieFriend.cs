/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// SocialFriendsBungieFriend
    /// </summary>
    [DataContract(Name = "Social.Friends.BungieFriend")]
    public partial class SocialFriendsBungieFriend : IEquatable<SocialFriendsBungieFriend>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SocialFriendsBungieFriend" /> class.
        /// </summary>
        /// <param name="lastSeenAsMembershipId">lastSeenAsMembershipId.</param>
        /// <param name="lastSeenAsBungieMembershipType">lastSeenAsBungieMembershipType.</param>
        /// <param name="bungieGlobalDisplayName">bungieGlobalDisplayName.</param>
        /// <param name="bungieGlobalDisplayNameCode">bungieGlobalDisplayNameCode.</param>
        /// <param name="onlineStatus">onlineStatus.</param>
        /// <param name="onlineTitle">onlineTitle.</param>
        /// <param name="relationship">relationship.</param>
        /// <param name="bungieNetUser">bungieNetUser.</param>
        public SocialFriendsBungieFriend(long lastSeenAsMembershipId = default(long), int lastSeenAsBungieMembershipType = default(int), string bungieGlobalDisplayName = default(string), int? bungieGlobalDisplayNameCode = default(int?), int onlineStatus = default(int), int onlineTitle = default(int), int relationship = default(int), UserGeneralUser bungieNetUser = default(UserGeneralUser))
        {
            this.LastSeenAsMembershipId = lastSeenAsMembershipId;
            this.LastSeenAsBungieMembershipType = lastSeenAsBungieMembershipType;
            this.BungieGlobalDisplayName = bungieGlobalDisplayName;
            this.BungieGlobalDisplayNameCode = bungieGlobalDisplayNameCode;
            this.OnlineStatus = onlineStatus;
            this.OnlineTitle = onlineTitle;
            this.Relationship = relationship;
            this.BungieNetUser = bungieNetUser;
        }

        /// <summary>
        /// Gets or Sets LastSeenAsMembershipId
        /// </summary>
        [DataMember(Name = "lastSeenAsMembershipId", EmitDefaultValue = false)]
        public long LastSeenAsMembershipId { get; set; }

        /// <summary>
        /// Gets or Sets LastSeenAsBungieMembershipType
        /// </summary>
        [DataMember(Name = "lastSeenAsBungieMembershipType", EmitDefaultValue = false)]
        public int LastSeenAsBungieMembershipType { get; set; }

        /// <summary>
        /// Gets or Sets BungieGlobalDisplayName
        /// </summary>
        [DataMember(Name = "bungieGlobalDisplayName", EmitDefaultValue = false)]
        public string BungieGlobalDisplayName { get; set; }

        /// <summary>
        /// Gets or Sets BungieGlobalDisplayNameCode
        /// </summary>
        [DataMember(Name = "bungieGlobalDisplayNameCode", EmitDefaultValue = true)]
        public int? BungieGlobalDisplayNameCode { get; set; }

        /// <summary>
        /// Gets or Sets OnlineStatus
        /// </summary>
        [DataMember(Name = "onlineStatus", EmitDefaultValue = false)]
        public int OnlineStatus { get; set; }

        /// <summary>
        /// Gets or Sets OnlineTitle
        /// </summary>
        [DataMember(Name = "onlineTitle", EmitDefaultValue = false)]
        public int OnlineTitle { get; set; }

        /// <summary>
        /// Gets or Sets Relationship
        /// </summary>
        [DataMember(Name = "relationship", EmitDefaultValue = false)]
        public int Relationship { get; set; }

        /// <summary>
        /// Gets or Sets BungieNetUser
        /// </summary>
        [DataMember(Name = "bungieNetUser", EmitDefaultValue = false)]
        public UserGeneralUser BungieNetUser { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SocialFriendsBungieFriend {\n");
            sb.Append("  LastSeenAsMembershipId: ").Append(LastSeenAsMembershipId).Append("\n");
            sb.Append("  LastSeenAsBungieMembershipType: ").Append(LastSeenAsBungieMembershipType).Append("\n");
            sb.Append("  BungieGlobalDisplayName: ").Append(BungieGlobalDisplayName).Append("\n");
            sb.Append("  BungieGlobalDisplayNameCode: ").Append(BungieGlobalDisplayNameCode).Append("\n");
            sb.Append("  OnlineStatus: ").Append(OnlineStatus).Append("\n");
            sb.Append("  OnlineTitle: ").Append(OnlineTitle).Append("\n");
            sb.Append("  Relationship: ").Append(Relationship).Append("\n");
            sb.Append("  BungieNetUser: ").Append(BungieNetUser).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SocialFriendsBungieFriend);
        }

        /// <summary>
        /// Returns true if SocialFriendsBungieFriend instances are equal
        /// </summary>
        /// <param name="input">Instance of SocialFriendsBungieFriend to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SocialFriendsBungieFriend input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.LastSeenAsMembershipId == input.LastSeenAsMembershipId ||
                    this.LastSeenAsMembershipId.Equals(input.LastSeenAsMembershipId)
                ) && 
                (
                    this.LastSeenAsBungieMembershipType == input.LastSeenAsBungieMembershipType ||
                    this.LastSeenAsBungieMembershipType.Equals(input.LastSeenAsBungieMembershipType)
                ) && 
                (
                    this.BungieGlobalDisplayName == input.BungieGlobalDisplayName ||
                    (this.BungieGlobalDisplayName != null &&
                    this.BungieGlobalDisplayName.Equals(input.BungieGlobalDisplayName))
                ) && 
                (
                    this.BungieGlobalDisplayNameCode == input.BungieGlobalDisplayNameCode ||
                    (this.BungieGlobalDisplayNameCode != null &&
                    this.BungieGlobalDisplayNameCode.Equals(input.BungieGlobalDisplayNameCode))
                ) && 
                (
                    this.OnlineStatus == input.OnlineStatus ||
                    this.OnlineStatus.Equals(input.OnlineStatus)
                ) && 
                (
                    this.OnlineTitle == input.OnlineTitle ||
                    this.OnlineTitle.Equals(input.OnlineTitle)
                ) && 
                (
                    this.Relationship == input.Relationship ||
                    this.Relationship.Equals(input.Relationship)
                ) && 
                (
                    this.BungieNetUser == input.BungieNetUser ||
                    (this.BungieNetUser != null &&
                    this.BungieNetUser.Equals(input.BungieNetUser))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.LastSeenAsMembershipId.GetHashCode();
                hashCode = (hashCode * 59) + this.LastSeenAsBungieMembershipType.GetHashCode();
                if (this.BungieGlobalDisplayName != null)
                {
                    hashCode = (hashCode * 59) + this.BungieGlobalDisplayName.GetHashCode();
                }
                if (this.BungieGlobalDisplayNameCode != null)
                {
                    hashCode = (hashCode * 59) + this.BungieGlobalDisplayNameCode.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.OnlineStatus.GetHashCode();
                hashCode = (hashCode * 59) + this.OnlineTitle.GetHashCode();
                hashCode = (hashCode * 59) + this.Relationship.GetHashCode();
                if (this.BungieNetUser != null)
                {
                    hashCode = (hashCode * 59) + this.BungieNetUser.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
