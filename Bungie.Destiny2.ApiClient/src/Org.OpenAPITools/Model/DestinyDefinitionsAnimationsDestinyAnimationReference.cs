/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// DestinyDefinitionsAnimationsDestinyAnimationReference
    /// </summary>
    [DataContract(Name = "Destiny.Definitions.Animations.DestinyAnimationReference")]
    public partial class DestinyDefinitionsAnimationsDestinyAnimationReference : IEquatable<DestinyDefinitionsAnimationsDestinyAnimationReference>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DestinyDefinitionsAnimationsDestinyAnimationReference" /> class.
        /// </summary>
        /// <param name="animName">animName.</param>
        /// <param name="animIdentifier">animIdentifier.</param>
        /// <param name="path">path.</param>
        public DestinyDefinitionsAnimationsDestinyAnimationReference(string animName = default(string), string animIdentifier = default(string), string path = default(string))
        {
            this.AnimName = animName;
            this.AnimIdentifier = animIdentifier;
            this.Path = path;
        }

        /// <summary>
        /// Gets or Sets AnimName
        /// </summary>
        [DataMember(Name = "animName", EmitDefaultValue = false)]
        public string AnimName { get; set; }

        /// <summary>
        /// Gets or Sets AnimIdentifier
        /// </summary>
        [DataMember(Name = "animIdentifier", EmitDefaultValue = false)]
        public string AnimIdentifier { get; set; }

        /// <summary>
        /// Gets or Sets Path
        /// </summary>
        [DataMember(Name = "path", EmitDefaultValue = false)]
        public string Path { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DestinyDefinitionsAnimationsDestinyAnimationReference {\n");
            sb.Append("  AnimName: ").Append(AnimName).Append("\n");
            sb.Append("  AnimIdentifier: ").Append(AnimIdentifier).Append("\n");
            sb.Append("  Path: ").Append(Path).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DestinyDefinitionsAnimationsDestinyAnimationReference);
        }

        /// <summary>
        /// Returns true if DestinyDefinitionsAnimationsDestinyAnimationReference instances are equal
        /// </summary>
        /// <param name="input">Instance of DestinyDefinitionsAnimationsDestinyAnimationReference to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DestinyDefinitionsAnimationsDestinyAnimationReference input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AnimName == input.AnimName ||
                    (this.AnimName != null &&
                    this.AnimName.Equals(input.AnimName))
                ) && 
                (
                    this.AnimIdentifier == input.AnimIdentifier ||
                    (this.AnimIdentifier != null &&
                    this.AnimIdentifier.Equals(input.AnimIdentifier))
                ) && 
                (
                    this.Path == input.Path ||
                    (this.Path != null &&
                    this.Path.Equals(input.Path))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AnimName != null)
                {
                    hashCode = (hashCode * 59) + this.AnimName.GetHashCode();
                }
                if (this.AnimIdentifier != null)
                {
                    hashCode = (hashCode * 59) + this.AnimIdentifier.GetHashCode();
                }
                if (this.Path != null)
                {
                    hashCode = (hashCode * 59) + this.Path.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
