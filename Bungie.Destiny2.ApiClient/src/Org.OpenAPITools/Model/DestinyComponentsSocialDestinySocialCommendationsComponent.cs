/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// DestinyComponentsSocialDestinySocialCommendationsComponent
    /// </summary>
    [DataContract(Name = "Destiny.Components.Social.DestinySocialCommendationsComponent")]
    public partial class DestinyComponentsSocialDestinySocialCommendationsComponent : IEquatable<DestinyComponentsSocialDestinySocialCommendationsComponent>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DestinyComponentsSocialDestinySocialCommendationsComponent" /> class.
        /// </summary>
        /// <param name="totalScore">totalScore.</param>
        /// <param name="scoreDetailValues">scoreDetailValues.</param>
        /// <param name="commendationNodeScoresByHash">commendationNodeScoresByHash.</param>
        /// <param name="commendationScoresByHash">commendationScoresByHash.</param>
        public DestinyComponentsSocialDestinySocialCommendationsComponent(int totalScore = default(int), List<int> scoreDetailValues = default(List<int>), Dictionary<string, int> commendationNodeScoresByHash = default(Dictionary<string, int>), Dictionary<string, int> commendationScoresByHash = default(Dictionary<string, int>))
        {
            this.TotalScore = totalScore;
            this.ScoreDetailValues = scoreDetailValues;
            this.CommendationNodeScoresByHash = commendationNodeScoresByHash;
            this.CommendationScoresByHash = commendationScoresByHash;
        }

        /// <summary>
        /// Gets or Sets TotalScore
        /// </summary>
        [DataMember(Name = "totalScore", EmitDefaultValue = false)]
        public int TotalScore { get; set; }

        /// <summary>
        /// Gets or Sets ScoreDetailValues
        /// </summary>
        [DataMember(Name = "scoreDetailValues", EmitDefaultValue = false)]
        public List<int> ScoreDetailValues { get; set; }

        /// <summary>
        /// Gets or Sets CommendationNodeScoresByHash
        /// </summary>
        [DataMember(Name = "commendationNodeScoresByHash", EmitDefaultValue = false)]
        public Dictionary<string, int> CommendationNodeScoresByHash { get; set; }

        /// <summary>
        /// Gets or Sets CommendationScoresByHash
        /// </summary>
        [DataMember(Name = "commendationScoresByHash", EmitDefaultValue = false)]
        public Dictionary<string, int> CommendationScoresByHash { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DestinyComponentsSocialDestinySocialCommendationsComponent {\n");
            sb.Append("  TotalScore: ").Append(TotalScore).Append("\n");
            sb.Append("  ScoreDetailValues: ").Append(ScoreDetailValues).Append("\n");
            sb.Append("  CommendationNodeScoresByHash: ").Append(CommendationNodeScoresByHash).Append("\n");
            sb.Append("  CommendationScoresByHash: ").Append(CommendationScoresByHash).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DestinyComponentsSocialDestinySocialCommendationsComponent);
        }

        /// <summary>
        /// Returns true if DestinyComponentsSocialDestinySocialCommendationsComponent instances are equal
        /// </summary>
        /// <param name="input">Instance of DestinyComponentsSocialDestinySocialCommendationsComponent to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DestinyComponentsSocialDestinySocialCommendationsComponent input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.TotalScore == input.TotalScore ||
                    this.TotalScore.Equals(input.TotalScore)
                ) && 
                (
                    this.ScoreDetailValues == input.ScoreDetailValues ||
                    this.ScoreDetailValues != null &&
                    input.ScoreDetailValues != null &&
                    this.ScoreDetailValues.SequenceEqual(input.ScoreDetailValues)
                ) && 
                (
                    this.CommendationNodeScoresByHash == input.CommendationNodeScoresByHash ||
                    this.CommendationNodeScoresByHash != null &&
                    input.CommendationNodeScoresByHash != null &&
                    this.CommendationNodeScoresByHash.SequenceEqual(input.CommendationNodeScoresByHash)
                ) && 
                (
                    this.CommendationScoresByHash == input.CommendationScoresByHash ||
                    this.CommendationScoresByHash != null &&
                    input.CommendationScoresByHash != null &&
                    this.CommendationScoresByHash.SequenceEqual(input.CommendationScoresByHash)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.TotalScore.GetHashCode();
                if (this.ScoreDetailValues != null)
                {
                    hashCode = (hashCode * 59) + this.ScoreDetailValues.GetHashCode();
                }
                if (this.CommendationNodeScoresByHash != null)
                {
                    hashCode = (hashCode * 59) + this.CommendationNodeScoresByHash.GetHashCode();
                }
                if (this.CommendationScoresByHash != null)
                {
                    hashCode = (hashCode * 59) + this.CommendationScoresByHash.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
