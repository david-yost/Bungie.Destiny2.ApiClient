/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// DestinyDefinitionsRecordsDestinyRecordTitleBlock
    /// </summary>
    [DataContract(Name = "Destiny.Definitions.Records.DestinyRecordTitleBlock")]
    public partial class DestinyDefinitionsRecordsDestinyRecordTitleBlock : IEquatable<DestinyDefinitionsRecordsDestinyRecordTitleBlock>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DestinyDefinitionsRecordsDestinyRecordTitleBlock" /> class.
        /// </summary>
        /// <param name="hasTitle">hasTitle.</param>
        /// <param name="titlesByGender">titlesByGender.</param>
        /// <param name="titlesByGenderHash">For those who prefer to use the definitions..</param>
        /// <param name="gildingTrackingRecordHash">gildingTrackingRecordHash.</param>
        public DestinyDefinitionsRecordsDestinyRecordTitleBlock(bool hasTitle = default(bool), Dictionary<string, string> titlesByGender = default(Dictionary<string, string>), Dictionary<string, string> titlesByGenderHash = default(Dictionary<string, string>), int? gildingTrackingRecordHash = default(int?))
        {
            this.HasTitle = hasTitle;
            this.TitlesByGender = titlesByGender;
            this.TitlesByGenderHash = titlesByGenderHash;
            this.GildingTrackingRecordHash = gildingTrackingRecordHash;
        }

        /// <summary>
        /// Gets or Sets HasTitle
        /// </summary>
        [DataMember(Name = "hasTitle", EmitDefaultValue = true)]
        public bool HasTitle { get; set; }

        /// <summary>
        /// Gets or Sets TitlesByGender
        /// </summary>
        [DataMember(Name = "titlesByGender", EmitDefaultValue = false)]
        public Dictionary<string, string> TitlesByGender { get; set; }

        /// <summary>
        /// For those who prefer to use the definitions.
        /// </summary>
        /// <value>For those who prefer to use the definitions.</value>
        [DataMember(Name = "titlesByGenderHash", EmitDefaultValue = false)]
        public Dictionary<string, string> TitlesByGenderHash { get; set; }

        /// <summary>
        /// Gets or Sets GildingTrackingRecordHash
        /// </summary>
        [DataMember(Name = "gildingTrackingRecordHash", EmitDefaultValue = true)]
        public int? GildingTrackingRecordHash { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DestinyDefinitionsRecordsDestinyRecordTitleBlock {\n");
            sb.Append("  HasTitle: ").Append(HasTitle).Append("\n");
            sb.Append("  TitlesByGender: ").Append(TitlesByGender).Append("\n");
            sb.Append("  TitlesByGenderHash: ").Append(TitlesByGenderHash).Append("\n");
            sb.Append("  GildingTrackingRecordHash: ").Append(GildingTrackingRecordHash).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DestinyDefinitionsRecordsDestinyRecordTitleBlock);
        }

        /// <summary>
        /// Returns true if DestinyDefinitionsRecordsDestinyRecordTitleBlock instances are equal
        /// </summary>
        /// <param name="input">Instance of DestinyDefinitionsRecordsDestinyRecordTitleBlock to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DestinyDefinitionsRecordsDestinyRecordTitleBlock input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.HasTitle == input.HasTitle ||
                    this.HasTitle.Equals(input.HasTitle)
                ) && 
                (
                    this.TitlesByGender == input.TitlesByGender ||
                    this.TitlesByGender != null &&
                    input.TitlesByGender != null &&
                    this.TitlesByGender.SequenceEqual(input.TitlesByGender)
                ) && 
                (
                    this.TitlesByGenderHash == input.TitlesByGenderHash ||
                    this.TitlesByGenderHash != null &&
                    input.TitlesByGenderHash != null &&
                    this.TitlesByGenderHash.SequenceEqual(input.TitlesByGenderHash)
                ) && 
                (
                    this.GildingTrackingRecordHash == input.GildingTrackingRecordHash ||
                    (this.GildingTrackingRecordHash != null &&
                    this.GildingTrackingRecordHash.Equals(input.GildingTrackingRecordHash))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.HasTitle.GetHashCode();
                if (this.TitlesByGender != null)
                {
                    hashCode = (hashCode * 59) + this.TitlesByGender.GetHashCode();
                }
                if (this.TitlesByGenderHash != null)
                {
                    hashCode = (hashCode * 59) + this.TitlesByGenderHash.GetHashCode();
                }
                if (this.GildingTrackingRecordHash != null)
                {
                    hashCode = (hashCode * 59) + this.GildingTrackingRecordHash.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
