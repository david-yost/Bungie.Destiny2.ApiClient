/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Represents a Seasonal Artifact and all data related to it for the requested Account.  It can be combined with Character-scoped data for a full picture of what a character has available/has chosen, or just these settings can be used for overview information.
    /// </summary>
    [DataContract(Name = "Destiny.Artifacts.DestinyArtifactProfileScoped")]
    public partial class DestinyArtifactsDestinyArtifactProfileScoped : IEquatable<DestinyArtifactsDestinyArtifactProfileScoped>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DestinyArtifactsDestinyArtifactProfileScoped" /> class.
        /// </summary>
        /// <param name="artifactHash">artifactHash.</param>
        /// <param name="pointProgression">pointProgression.</param>
        /// <param name="pointsAcquired">pointsAcquired.</param>
        /// <param name="powerBonusProgression">powerBonusProgression.</param>
        /// <param name="powerBonus">powerBonus.</param>
        public DestinyArtifactsDestinyArtifactProfileScoped(int artifactHash = default(int), DestinyDestinyProgression pointProgression = default(DestinyDestinyProgression), int pointsAcquired = default(int), DestinyDestinyProgression powerBonusProgression = default(DestinyDestinyProgression), int powerBonus = default(int))
        {
            this.ArtifactHash = artifactHash;
            this.PointProgression = pointProgression;
            this.PointsAcquired = pointsAcquired;
            this.PowerBonusProgression = powerBonusProgression;
            this.PowerBonus = powerBonus;
        }

        /// <summary>
        /// Gets or Sets ArtifactHash
        /// </summary>
        [DataMember(Name = "artifactHash", EmitDefaultValue = false)]
        public int ArtifactHash { get; set; }

        /// <summary>
        /// Gets or Sets PointProgression
        /// </summary>
        [DataMember(Name = "pointProgression", EmitDefaultValue = false)]
        public DestinyDestinyProgression PointProgression { get; set; }

        /// <summary>
        /// Gets or Sets PointsAcquired
        /// </summary>
        [DataMember(Name = "pointsAcquired", EmitDefaultValue = false)]
        public int PointsAcquired { get; set; }

        /// <summary>
        /// Gets or Sets PowerBonusProgression
        /// </summary>
        [DataMember(Name = "powerBonusProgression", EmitDefaultValue = false)]
        public DestinyDestinyProgression PowerBonusProgression { get; set; }

        /// <summary>
        /// Gets or Sets PowerBonus
        /// </summary>
        [DataMember(Name = "powerBonus", EmitDefaultValue = false)]
        public int PowerBonus { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DestinyArtifactsDestinyArtifactProfileScoped {\n");
            sb.Append("  ArtifactHash: ").Append(ArtifactHash).Append("\n");
            sb.Append("  PointProgression: ").Append(PointProgression).Append("\n");
            sb.Append("  PointsAcquired: ").Append(PointsAcquired).Append("\n");
            sb.Append("  PowerBonusProgression: ").Append(PowerBonusProgression).Append("\n");
            sb.Append("  PowerBonus: ").Append(PowerBonus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DestinyArtifactsDestinyArtifactProfileScoped);
        }

        /// <summary>
        /// Returns true if DestinyArtifactsDestinyArtifactProfileScoped instances are equal
        /// </summary>
        /// <param name="input">Instance of DestinyArtifactsDestinyArtifactProfileScoped to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DestinyArtifactsDestinyArtifactProfileScoped input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ArtifactHash == input.ArtifactHash ||
                    this.ArtifactHash.Equals(input.ArtifactHash)
                ) && 
                (
                    this.PointProgression == input.PointProgression ||
                    (this.PointProgression != null &&
                    this.PointProgression.Equals(input.PointProgression))
                ) && 
                (
                    this.PointsAcquired == input.PointsAcquired ||
                    this.PointsAcquired.Equals(input.PointsAcquired)
                ) && 
                (
                    this.PowerBonusProgression == input.PowerBonusProgression ||
                    (this.PowerBonusProgression != null &&
                    this.PowerBonusProgression.Equals(input.PowerBonusProgression))
                ) && 
                (
                    this.PowerBonus == input.PowerBonus ||
                    this.PowerBonus.Equals(input.PowerBonus)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.ArtifactHash.GetHashCode();
                if (this.PointProgression != null)
                {
                    hashCode = (hashCode * 59) + this.PointProgression.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.PointsAcquired.GetHashCode();
                if (this.PowerBonusProgression != null)
                {
                    hashCode = (hashCode * 59) + this.PowerBonusProgression.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.PowerBonus.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
