/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// SocialFriendsPlatformFriendResponse
    /// </summary>
    [DataContract(Name = "Social.Friends.PlatformFriendResponse")]
    public partial class SocialFriendsPlatformFriendResponse : IEquatable<SocialFriendsPlatformFriendResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SocialFriendsPlatformFriendResponse" /> class.
        /// </summary>
        /// <param name="itemsPerPage">itemsPerPage.</param>
        /// <param name="currentPage">currentPage.</param>
        /// <param name="hasMore">hasMore.</param>
        /// <param name="platformFriends">platformFriends.</param>
        public SocialFriendsPlatformFriendResponse(int itemsPerPage = default(int), int currentPage = default(int), bool hasMore = default(bool), List<SocialFriendsPlatformFriend> platformFriends = default(List<SocialFriendsPlatformFriend>))
        {
            this.ItemsPerPage = itemsPerPage;
            this.CurrentPage = currentPage;
            this.HasMore = hasMore;
            this.PlatformFriends = platformFriends;
        }

        /// <summary>
        /// Gets or Sets ItemsPerPage
        /// </summary>
        [DataMember(Name = "itemsPerPage", EmitDefaultValue = false)]
        public int ItemsPerPage { get; set; }

        /// <summary>
        /// Gets or Sets CurrentPage
        /// </summary>
        [DataMember(Name = "currentPage", EmitDefaultValue = false)]
        public int CurrentPage { get; set; }

        /// <summary>
        /// Gets or Sets HasMore
        /// </summary>
        [DataMember(Name = "hasMore", EmitDefaultValue = true)]
        public bool HasMore { get; set; }

        /// <summary>
        /// Gets or Sets PlatformFriends
        /// </summary>
        [DataMember(Name = "platformFriends", EmitDefaultValue = false)]
        public List<SocialFriendsPlatformFriend> PlatformFriends { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SocialFriendsPlatformFriendResponse {\n");
            sb.Append("  ItemsPerPage: ").Append(ItemsPerPage).Append("\n");
            sb.Append("  CurrentPage: ").Append(CurrentPage).Append("\n");
            sb.Append("  HasMore: ").Append(HasMore).Append("\n");
            sb.Append("  PlatformFriends: ").Append(PlatformFriends).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SocialFriendsPlatformFriendResponse);
        }

        /// <summary>
        /// Returns true if SocialFriendsPlatformFriendResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of SocialFriendsPlatformFriendResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SocialFriendsPlatformFriendResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ItemsPerPage == input.ItemsPerPage ||
                    this.ItemsPerPage.Equals(input.ItemsPerPage)
                ) && 
                (
                    this.CurrentPage == input.CurrentPage ||
                    this.CurrentPage.Equals(input.CurrentPage)
                ) && 
                (
                    this.HasMore == input.HasMore ||
                    this.HasMore.Equals(input.HasMore)
                ) && 
                (
                    this.PlatformFriends == input.PlatformFriends ||
                    this.PlatformFriends != null &&
                    input.PlatformFriends != null &&
                    this.PlatformFriends.SequenceEqual(input.PlatformFriends)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.ItemsPerPage.GetHashCode();
                hashCode = (hashCode * 59) + this.CurrentPage.GetHashCode();
                hashCode = (hashCode * 59) + this.HasMore.GetHashCode();
                if (this.PlatformFriends != null)
                {
                    hashCode = (hashCode * 59) + this.PlatformFriends.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
