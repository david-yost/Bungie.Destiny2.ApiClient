/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// SocialFriendsBungieFriendRequestListResponse
    /// </summary>
    [DataContract(Name = "Social.Friends.BungieFriendRequestListResponse")]
    public partial class SocialFriendsBungieFriendRequestListResponse : IEquatable<SocialFriendsBungieFriendRequestListResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SocialFriendsBungieFriendRequestListResponse" /> class.
        /// </summary>
        /// <param name="incomingRequests">incomingRequests.</param>
        /// <param name="outgoingRequests">outgoingRequests.</param>
        public SocialFriendsBungieFriendRequestListResponse(List<SocialFriendsBungieFriend> incomingRequests = default(List<SocialFriendsBungieFriend>), List<SocialFriendsBungieFriend> outgoingRequests = default(List<SocialFriendsBungieFriend>))
        {
            this.IncomingRequests = incomingRequests;
            this.OutgoingRequests = outgoingRequests;
        }

        /// <summary>
        /// Gets or Sets IncomingRequests
        /// </summary>
        [DataMember(Name = "incomingRequests", EmitDefaultValue = false)]
        public List<SocialFriendsBungieFriend> IncomingRequests { get; set; }

        /// <summary>
        /// Gets or Sets OutgoingRequests
        /// </summary>
        [DataMember(Name = "outgoingRequests", EmitDefaultValue = false)]
        public List<SocialFriendsBungieFriend> OutgoingRequests { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SocialFriendsBungieFriendRequestListResponse {\n");
            sb.Append("  IncomingRequests: ").Append(IncomingRequests).Append("\n");
            sb.Append("  OutgoingRequests: ").Append(OutgoingRequests).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SocialFriendsBungieFriendRequestListResponse);
        }

        /// <summary>
        /// Returns true if SocialFriendsBungieFriendRequestListResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of SocialFriendsBungieFriendRequestListResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SocialFriendsBungieFriendRequestListResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.IncomingRequests == input.IncomingRequests ||
                    this.IncomingRequests != null &&
                    input.IncomingRequests != null &&
                    this.IncomingRequests.SequenceEqual(input.IncomingRequests)
                ) && 
                (
                    this.OutgoingRequests == input.OutgoingRequests ||
                    this.OutgoingRequests != null &&
                    input.OutgoingRequests != null &&
                    this.OutgoingRequests.SequenceEqual(input.OutgoingRequests)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.IncomingRequests != null)
                {
                    hashCode = (hashCode * 59) + this.IncomingRequests.GetHashCode();
                }
                if (this.OutgoingRequests != null)
                {
                    hashCode = (hashCode * 59) + this.OutgoingRequests.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
