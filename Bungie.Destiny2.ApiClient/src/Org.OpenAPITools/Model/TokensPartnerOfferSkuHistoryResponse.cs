/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// TokensPartnerOfferSkuHistoryResponse
    /// </summary>
    [DataContract(Name = "Tokens.PartnerOfferSkuHistoryResponse")]
    public partial class TokensPartnerOfferSkuHistoryResponse : IEquatable<TokensPartnerOfferSkuHistoryResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TokensPartnerOfferSkuHistoryResponse" /> class.
        /// </summary>
        /// <param name="skuIdentifier">skuIdentifier.</param>
        /// <param name="localizedName">localizedName.</param>
        /// <param name="localizedDescription">localizedDescription.</param>
        /// <param name="claimDate">claimDate.</param>
        /// <param name="allOffersApplied">allOffersApplied.</param>
        /// <param name="transactionId">transactionId.</param>
        /// <param name="skuOffers">skuOffers.</param>
        public TokensPartnerOfferSkuHistoryResponse(string skuIdentifier = default(string), string localizedName = default(string), string localizedDescription = default(string), DateTime claimDate = default(DateTime), bool allOffersApplied = default(bool), string transactionId = default(string), List<TokensPartnerOfferHistoryResponse> skuOffers = default(List<TokensPartnerOfferHistoryResponse>))
        {
            this.SkuIdentifier = skuIdentifier;
            this.LocalizedName = localizedName;
            this.LocalizedDescription = localizedDescription;
            this.ClaimDate = claimDate;
            this.AllOffersApplied = allOffersApplied;
            this.TransactionId = transactionId;
            this.SkuOffers = skuOffers;
        }

        /// <summary>
        /// Gets or Sets SkuIdentifier
        /// </summary>
        [DataMember(Name = "SkuIdentifier", EmitDefaultValue = false)]
        public string SkuIdentifier { get; set; }

        /// <summary>
        /// Gets or Sets LocalizedName
        /// </summary>
        [DataMember(Name = "LocalizedName", EmitDefaultValue = false)]
        public string LocalizedName { get; set; }

        /// <summary>
        /// Gets or Sets LocalizedDescription
        /// </summary>
        [DataMember(Name = "LocalizedDescription", EmitDefaultValue = false)]
        public string LocalizedDescription { get; set; }

        /// <summary>
        /// Gets or Sets ClaimDate
        /// </summary>
        [DataMember(Name = "ClaimDate", EmitDefaultValue = false)]
        public DateTime ClaimDate { get; set; }

        /// <summary>
        /// Gets or Sets AllOffersApplied
        /// </summary>
        [DataMember(Name = "AllOffersApplied", EmitDefaultValue = true)]
        public bool AllOffersApplied { get; set; }

        /// <summary>
        /// Gets or Sets TransactionId
        /// </summary>
        [DataMember(Name = "TransactionId", EmitDefaultValue = false)]
        public string TransactionId { get; set; }

        /// <summary>
        /// Gets or Sets SkuOffers
        /// </summary>
        [DataMember(Name = "SkuOffers", EmitDefaultValue = false)]
        public List<TokensPartnerOfferHistoryResponse> SkuOffers { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TokensPartnerOfferSkuHistoryResponse {\n");
            sb.Append("  SkuIdentifier: ").Append(SkuIdentifier).Append("\n");
            sb.Append("  LocalizedName: ").Append(LocalizedName).Append("\n");
            sb.Append("  LocalizedDescription: ").Append(LocalizedDescription).Append("\n");
            sb.Append("  ClaimDate: ").Append(ClaimDate).Append("\n");
            sb.Append("  AllOffersApplied: ").Append(AllOffersApplied).Append("\n");
            sb.Append("  TransactionId: ").Append(TransactionId).Append("\n");
            sb.Append("  SkuOffers: ").Append(SkuOffers).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TokensPartnerOfferSkuHistoryResponse);
        }

        /// <summary>
        /// Returns true if TokensPartnerOfferSkuHistoryResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of TokensPartnerOfferSkuHistoryResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TokensPartnerOfferSkuHistoryResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.SkuIdentifier == input.SkuIdentifier ||
                    (this.SkuIdentifier != null &&
                    this.SkuIdentifier.Equals(input.SkuIdentifier))
                ) && 
                (
                    this.LocalizedName == input.LocalizedName ||
                    (this.LocalizedName != null &&
                    this.LocalizedName.Equals(input.LocalizedName))
                ) && 
                (
                    this.LocalizedDescription == input.LocalizedDescription ||
                    (this.LocalizedDescription != null &&
                    this.LocalizedDescription.Equals(input.LocalizedDescription))
                ) && 
                (
                    this.ClaimDate == input.ClaimDate ||
                    (this.ClaimDate != null &&
                    this.ClaimDate.Equals(input.ClaimDate))
                ) && 
                (
                    this.AllOffersApplied == input.AllOffersApplied ||
                    this.AllOffersApplied.Equals(input.AllOffersApplied)
                ) && 
                (
                    this.TransactionId == input.TransactionId ||
                    (this.TransactionId != null &&
                    this.TransactionId.Equals(input.TransactionId))
                ) && 
                (
                    this.SkuOffers == input.SkuOffers ||
                    this.SkuOffers != null &&
                    input.SkuOffers != null &&
                    this.SkuOffers.SequenceEqual(input.SkuOffers)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SkuIdentifier != null)
                {
                    hashCode = (hashCode * 59) + this.SkuIdentifier.GetHashCode();
                }
                if (this.LocalizedName != null)
                {
                    hashCode = (hashCode * 59) + this.LocalizedName.GetHashCode();
                }
                if (this.LocalizedDescription != null)
                {
                    hashCode = (hashCode * 59) + this.LocalizedDescription.GetHashCode();
                }
                if (this.ClaimDate != null)
                {
                    hashCode = (hashCode * 59) + this.ClaimDate.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.AllOffersApplied.GetHashCode();
                if (this.TransactionId != null)
                {
                    hashCode = (hashCode * 59) + this.TransactionId.GetHashCode();
                }
                if (this.SkuOffers != null)
                {
                    hashCode = (hashCode * 59) + this.SkuOffers.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
