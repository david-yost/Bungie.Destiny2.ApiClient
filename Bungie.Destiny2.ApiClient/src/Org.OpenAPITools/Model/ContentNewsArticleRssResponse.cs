/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ContentNewsArticleRssResponse
    /// </summary>
    [DataContract(Name = "Content.NewsArticleRssResponse")]
    public partial class ContentNewsArticleRssResponse : IEquatable<ContentNewsArticleRssResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ContentNewsArticleRssResponse" /> class.
        /// </summary>
        /// <param name="newsArticles">newsArticles.</param>
        /// <param name="currentPaginationToken">currentPaginationToken.</param>
        /// <param name="nextPaginationToken">nextPaginationToken.</param>
        /// <param name="resultCountThisPage">resultCountThisPage.</param>
        /// <param name="categoryFilter">categoryFilter.</param>
        public ContentNewsArticleRssResponse(List<ContentNewsArticleRssItem> newsArticles = default(List<ContentNewsArticleRssItem>), int currentPaginationToken = default(int), int? nextPaginationToken = default(int?), int resultCountThisPage = default(int), string categoryFilter = default(string))
        {
            this.NewsArticles = newsArticles;
            this.CurrentPaginationToken = currentPaginationToken;
            this.NextPaginationToken = nextPaginationToken;
            this.ResultCountThisPage = resultCountThisPage;
            this.CategoryFilter = categoryFilter;
        }

        /// <summary>
        /// Gets or Sets NewsArticles
        /// </summary>
        [DataMember(Name = "NewsArticles", EmitDefaultValue = false)]
        public List<ContentNewsArticleRssItem> NewsArticles { get; set; }

        /// <summary>
        /// Gets or Sets CurrentPaginationToken
        /// </summary>
        [DataMember(Name = "CurrentPaginationToken", EmitDefaultValue = false)]
        public int CurrentPaginationToken { get; set; }

        /// <summary>
        /// Gets or Sets NextPaginationToken
        /// </summary>
        [DataMember(Name = "NextPaginationToken", EmitDefaultValue = true)]
        public int? NextPaginationToken { get; set; }

        /// <summary>
        /// Gets or Sets ResultCountThisPage
        /// </summary>
        [DataMember(Name = "ResultCountThisPage", EmitDefaultValue = false)]
        public int ResultCountThisPage { get; set; }

        /// <summary>
        /// Gets or Sets CategoryFilter
        /// </summary>
        [DataMember(Name = "CategoryFilter", EmitDefaultValue = false)]
        public string CategoryFilter { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ContentNewsArticleRssResponse {\n");
            sb.Append("  NewsArticles: ").Append(NewsArticles).Append("\n");
            sb.Append("  CurrentPaginationToken: ").Append(CurrentPaginationToken).Append("\n");
            sb.Append("  NextPaginationToken: ").Append(NextPaginationToken).Append("\n");
            sb.Append("  ResultCountThisPage: ").Append(ResultCountThisPage).Append("\n");
            sb.Append("  CategoryFilter: ").Append(CategoryFilter).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ContentNewsArticleRssResponse);
        }

        /// <summary>
        /// Returns true if ContentNewsArticleRssResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of ContentNewsArticleRssResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ContentNewsArticleRssResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.NewsArticles == input.NewsArticles ||
                    this.NewsArticles != null &&
                    input.NewsArticles != null &&
                    this.NewsArticles.SequenceEqual(input.NewsArticles)
                ) && 
                (
                    this.CurrentPaginationToken == input.CurrentPaginationToken ||
                    this.CurrentPaginationToken.Equals(input.CurrentPaginationToken)
                ) && 
                (
                    this.NextPaginationToken == input.NextPaginationToken ||
                    (this.NextPaginationToken != null &&
                    this.NextPaginationToken.Equals(input.NextPaginationToken))
                ) && 
                (
                    this.ResultCountThisPage == input.ResultCountThisPage ||
                    this.ResultCountThisPage.Equals(input.ResultCountThisPage)
                ) && 
                (
                    this.CategoryFilter == input.CategoryFilter ||
                    (this.CategoryFilter != null &&
                    this.CategoryFilter.Equals(input.CategoryFilter))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.NewsArticles != null)
                {
                    hashCode = (hashCode * 59) + this.NewsArticles.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.CurrentPaginationToken.GetHashCode();
                if (this.NextPaginationToken != null)
                {
                    hashCode = (hashCode * 59) + this.NextPaginationToken.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.ResultCountThisPage.GetHashCode();
                if (this.CategoryFilter != null)
                {
                    hashCode = (hashCode * 59) + this.CategoryFilter.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
