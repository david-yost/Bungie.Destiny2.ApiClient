/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CommonModelsCoreSettingsConfiguration
    /// </summary>
    [DataContract(Name = "Common.Models.CoreSettingsConfiguration")]
    public partial class CommonModelsCoreSettingsConfiguration : IEquatable<CommonModelsCoreSettingsConfiguration>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CommonModelsCoreSettingsConfiguration" /> class.
        /// </summary>
        /// <param name="varEnvironment">varEnvironment.</param>
        /// <param name="systems">systems.</param>
        /// <param name="ignoreReasons">ignoreReasons.</param>
        /// <param name="forumCategories">forumCategories.</param>
        /// <param name="groupAvatars">groupAvatars.</param>
        /// <param name="defaultGroupTheme">defaultGroupTheme.</param>
        /// <param name="destinyMembershipTypes">destinyMembershipTypes.</param>
        /// <param name="recruitmentPlatformTags">recruitmentPlatformTags.</param>
        /// <param name="recruitmentMiscTags">recruitmentMiscTags.</param>
        /// <param name="recruitmentActivities">recruitmentActivities.</param>
        /// <param name="userContentLocales">userContentLocales.</param>
        /// <param name="systemContentLocales">systemContentLocales.</param>
        /// <param name="clanBannerDecals">clanBannerDecals.</param>
        /// <param name="clanBannerDecalColors">clanBannerDecalColors.</param>
        /// <param name="clanBannerGonfalons">clanBannerGonfalons.</param>
        /// <param name="clanBannerGonfalonColors">clanBannerGonfalonColors.</param>
        /// <param name="clanBannerGonfalonDetails">clanBannerGonfalonDetails.</param>
        /// <param name="clanBannerGonfalonDetailColors">clanBannerGonfalonDetailColors.</param>
        /// <param name="clanBannerStandards">clanBannerStandards.</param>
        /// <param name="destiny2CoreSettings">destiny2CoreSettings.</param>
        /// <param name="emailSettings">emailSettings.</param>
        /// <param name="fireteamActivities">fireteamActivities.</param>
        public CommonModelsCoreSettingsConfiguration(string varEnvironment = default(string), Dictionary<string, CommonModelsCoreSystem> systems = default(Dictionary<string, CommonModelsCoreSystem>), List<CommonModelsCoreSetting> ignoreReasons = default(List<CommonModelsCoreSetting>), List<CommonModelsCoreSetting> forumCategories = default(List<CommonModelsCoreSetting>), List<CommonModelsCoreSetting> groupAvatars = default(List<CommonModelsCoreSetting>), CommonModelsCoreSetting defaultGroupTheme = default(CommonModelsCoreSetting), List<CommonModelsCoreSetting> destinyMembershipTypes = default(List<CommonModelsCoreSetting>), List<CommonModelsCoreSetting> recruitmentPlatformTags = default(List<CommonModelsCoreSetting>), List<CommonModelsCoreSetting> recruitmentMiscTags = default(List<CommonModelsCoreSetting>), List<CommonModelsCoreSetting> recruitmentActivities = default(List<CommonModelsCoreSetting>), List<CommonModelsCoreSetting> userContentLocales = default(List<CommonModelsCoreSetting>), List<CommonModelsCoreSetting> systemContentLocales = default(List<CommonModelsCoreSetting>), List<CommonModelsCoreSetting> clanBannerDecals = default(List<CommonModelsCoreSetting>), List<CommonModelsCoreSetting> clanBannerDecalColors = default(List<CommonModelsCoreSetting>), List<CommonModelsCoreSetting> clanBannerGonfalons = default(List<CommonModelsCoreSetting>), List<CommonModelsCoreSetting> clanBannerGonfalonColors = default(List<CommonModelsCoreSetting>), List<CommonModelsCoreSetting> clanBannerGonfalonDetails = default(List<CommonModelsCoreSetting>), List<CommonModelsCoreSetting> clanBannerGonfalonDetailColors = default(List<CommonModelsCoreSetting>), List<CommonModelsCoreSetting> clanBannerStandards = default(List<CommonModelsCoreSetting>), CommonModelsDestiny2CoreSettings destiny2CoreSettings = default(CommonModelsDestiny2CoreSettings), UserEmailSettings emailSettings = default(UserEmailSettings), List<CommonModelsCoreSetting> fireteamActivities = default(List<CommonModelsCoreSetting>))
        {
            this.VarEnvironment = varEnvironment;
            this.Systems = systems;
            this.IgnoreReasons = ignoreReasons;
            this.ForumCategories = forumCategories;
            this.GroupAvatars = groupAvatars;
            this.DefaultGroupTheme = defaultGroupTheme;
            this.DestinyMembershipTypes = destinyMembershipTypes;
            this.RecruitmentPlatformTags = recruitmentPlatformTags;
            this.RecruitmentMiscTags = recruitmentMiscTags;
            this.RecruitmentActivities = recruitmentActivities;
            this.UserContentLocales = userContentLocales;
            this.SystemContentLocales = systemContentLocales;
            this.ClanBannerDecals = clanBannerDecals;
            this.ClanBannerDecalColors = clanBannerDecalColors;
            this.ClanBannerGonfalons = clanBannerGonfalons;
            this.ClanBannerGonfalonColors = clanBannerGonfalonColors;
            this.ClanBannerGonfalonDetails = clanBannerGonfalonDetails;
            this.ClanBannerGonfalonDetailColors = clanBannerGonfalonDetailColors;
            this.ClanBannerStandards = clanBannerStandards;
            this.Destiny2CoreSettings = destiny2CoreSettings;
            this.EmailSettings = emailSettings;
            this.FireteamActivities = fireteamActivities;
        }

        /// <summary>
        /// Gets or Sets VarEnvironment
        /// </summary>
        [DataMember(Name = "environment", EmitDefaultValue = false)]
        public string VarEnvironment { get; set; }

        /// <summary>
        /// Gets or Sets Systems
        /// </summary>
        [DataMember(Name = "systems", EmitDefaultValue = false)]
        public Dictionary<string, CommonModelsCoreSystem> Systems { get; set; }

        /// <summary>
        /// Gets or Sets IgnoreReasons
        /// </summary>
        [DataMember(Name = "ignoreReasons", EmitDefaultValue = false)]
        public List<CommonModelsCoreSetting> IgnoreReasons { get; set; }

        /// <summary>
        /// Gets or Sets ForumCategories
        /// </summary>
        [DataMember(Name = "forumCategories", EmitDefaultValue = false)]
        public List<CommonModelsCoreSetting> ForumCategories { get; set; }

        /// <summary>
        /// Gets or Sets GroupAvatars
        /// </summary>
        [DataMember(Name = "groupAvatars", EmitDefaultValue = false)]
        public List<CommonModelsCoreSetting> GroupAvatars { get; set; }

        /// <summary>
        /// Gets or Sets DefaultGroupTheme
        /// </summary>
        [DataMember(Name = "defaultGroupTheme", EmitDefaultValue = false)]
        public CommonModelsCoreSetting DefaultGroupTheme { get; set; }

        /// <summary>
        /// Gets or Sets DestinyMembershipTypes
        /// </summary>
        [DataMember(Name = "destinyMembershipTypes", EmitDefaultValue = false)]
        public List<CommonModelsCoreSetting> DestinyMembershipTypes { get; set; }

        /// <summary>
        /// Gets or Sets RecruitmentPlatformTags
        /// </summary>
        [DataMember(Name = "recruitmentPlatformTags", EmitDefaultValue = false)]
        public List<CommonModelsCoreSetting> RecruitmentPlatformTags { get; set; }

        /// <summary>
        /// Gets or Sets RecruitmentMiscTags
        /// </summary>
        [DataMember(Name = "recruitmentMiscTags", EmitDefaultValue = false)]
        public List<CommonModelsCoreSetting> RecruitmentMiscTags { get; set; }

        /// <summary>
        /// Gets or Sets RecruitmentActivities
        /// </summary>
        [DataMember(Name = "recruitmentActivities", EmitDefaultValue = false)]
        public List<CommonModelsCoreSetting> RecruitmentActivities { get; set; }

        /// <summary>
        /// Gets or Sets UserContentLocales
        /// </summary>
        [DataMember(Name = "userContentLocales", EmitDefaultValue = false)]
        public List<CommonModelsCoreSetting> UserContentLocales { get; set; }

        /// <summary>
        /// Gets or Sets SystemContentLocales
        /// </summary>
        [DataMember(Name = "systemContentLocales", EmitDefaultValue = false)]
        public List<CommonModelsCoreSetting> SystemContentLocales { get; set; }

        /// <summary>
        /// Gets or Sets ClanBannerDecals
        /// </summary>
        [DataMember(Name = "clanBannerDecals", EmitDefaultValue = false)]
        public List<CommonModelsCoreSetting> ClanBannerDecals { get; set; }

        /// <summary>
        /// Gets or Sets ClanBannerDecalColors
        /// </summary>
        [DataMember(Name = "clanBannerDecalColors", EmitDefaultValue = false)]
        public List<CommonModelsCoreSetting> ClanBannerDecalColors { get; set; }

        /// <summary>
        /// Gets or Sets ClanBannerGonfalons
        /// </summary>
        [DataMember(Name = "clanBannerGonfalons", EmitDefaultValue = false)]
        public List<CommonModelsCoreSetting> ClanBannerGonfalons { get; set; }

        /// <summary>
        /// Gets or Sets ClanBannerGonfalonColors
        /// </summary>
        [DataMember(Name = "clanBannerGonfalonColors", EmitDefaultValue = false)]
        public List<CommonModelsCoreSetting> ClanBannerGonfalonColors { get; set; }

        /// <summary>
        /// Gets or Sets ClanBannerGonfalonDetails
        /// </summary>
        [DataMember(Name = "clanBannerGonfalonDetails", EmitDefaultValue = false)]
        public List<CommonModelsCoreSetting> ClanBannerGonfalonDetails { get; set; }

        /// <summary>
        /// Gets or Sets ClanBannerGonfalonDetailColors
        /// </summary>
        [DataMember(Name = "clanBannerGonfalonDetailColors", EmitDefaultValue = false)]
        public List<CommonModelsCoreSetting> ClanBannerGonfalonDetailColors { get; set; }

        /// <summary>
        /// Gets or Sets ClanBannerStandards
        /// </summary>
        [DataMember(Name = "clanBannerStandards", EmitDefaultValue = false)]
        public List<CommonModelsCoreSetting> ClanBannerStandards { get; set; }

        /// <summary>
        /// Gets or Sets Destiny2CoreSettings
        /// </summary>
        [DataMember(Name = "destiny2CoreSettings", EmitDefaultValue = false)]
        public CommonModelsDestiny2CoreSettings Destiny2CoreSettings { get; set; }

        /// <summary>
        /// Gets or Sets EmailSettings
        /// </summary>
        [DataMember(Name = "emailSettings", EmitDefaultValue = false)]
        public UserEmailSettings EmailSettings { get; set; }

        /// <summary>
        /// Gets or Sets FireteamActivities
        /// </summary>
        [DataMember(Name = "fireteamActivities", EmitDefaultValue = false)]
        public List<CommonModelsCoreSetting> FireteamActivities { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CommonModelsCoreSettingsConfiguration {\n");
            sb.Append("  VarEnvironment: ").Append(VarEnvironment).Append("\n");
            sb.Append("  Systems: ").Append(Systems).Append("\n");
            sb.Append("  IgnoreReasons: ").Append(IgnoreReasons).Append("\n");
            sb.Append("  ForumCategories: ").Append(ForumCategories).Append("\n");
            sb.Append("  GroupAvatars: ").Append(GroupAvatars).Append("\n");
            sb.Append("  DefaultGroupTheme: ").Append(DefaultGroupTheme).Append("\n");
            sb.Append("  DestinyMembershipTypes: ").Append(DestinyMembershipTypes).Append("\n");
            sb.Append("  RecruitmentPlatformTags: ").Append(RecruitmentPlatformTags).Append("\n");
            sb.Append("  RecruitmentMiscTags: ").Append(RecruitmentMiscTags).Append("\n");
            sb.Append("  RecruitmentActivities: ").Append(RecruitmentActivities).Append("\n");
            sb.Append("  UserContentLocales: ").Append(UserContentLocales).Append("\n");
            sb.Append("  SystemContentLocales: ").Append(SystemContentLocales).Append("\n");
            sb.Append("  ClanBannerDecals: ").Append(ClanBannerDecals).Append("\n");
            sb.Append("  ClanBannerDecalColors: ").Append(ClanBannerDecalColors).Append("\n");
            sb.Append("  ClanBannerGonfalons: ").Append(ClanBannerGonfalons).Append("\n");
            sb.Append("  ClanBannerGonfalonColors: ").Append(ClanBannerGonfalonColors).Append("\n");
            sb.Append("  ClanBannerGonfalonDetails: ").Append(ClanBannerGonfalonDetails).Append("\n");
            sb.Append("  ClanBannerGonfalonDetailColors: ").Append(ClanBannerGonfalonDetailColors).Append("\n");
            sb.Append("  ClanBannerStandards: ").Append(ClanBannerStandards).Append("\n");
            sb.Append("  Destiny2CoreSettings: ").Append(Destiny2CoreSettings).Append("\n");
            sb.Append("  EmailSettings: ").Append(EmailSettings).Append("\n");
            sb.Append("  FireteamActivities: ").Append(FireteamActivities).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CommonModelsCoreSettingsConfiguration);
        }

        /// <summary>
        /// Returns true if CommonModelsCoreSettingsConfiguration instances are equal
        /// </summary>
        /// <param name="input">Instance of CommonModelsCoreSettingsConfiguration to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CommonModelsCoreSettingsConfiguration input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.VarEnvironment == input.VarEnvironment ||
                    (this.VarEnvironment != null &&
                    this.VarEnvironment.Equals(input.VarEnvironment))
                ) && 
                (
                    this.Systems == input.Systems ||
                    this.Systems != null &&
                    input.Systems != null &&
                    this.Systems.SequenceEqual(input.Systems)
                ) && 
                (
                    this.IgnoreReasons == input.IgnoreReasons ||
                    this.IgnoreReasons != null &&
                    input.IgnoreReasons != null &&
                    this.IgnoreReasons.SequenceEqual(input.IgnoreReasons)
                ) && 
                (
                    this.ForumCategories == input.ForumCategories ||
                    this.ForumCategories != null &&
                    input.ForumCategories != null &&
                    this.ForumCategories.SequenceEqual(input.ForumCategories)
                ) && 
                (
                    this.GroupAvatars == input.GroupAvatars ||
                    this.GroupAvatars != null &&
                    input.GroupAvatars != null &&
                    this.GroupAvatars.SequenceEqual(input.GroupAvatars)
                ) && 
                (
                    this.DefaultGroupTheme == input.DefaultGroupTheme ||
                    (this.DefaultGroupTheme != null &&
                    this.DefaultGroupTheme.Equals(input.DefaultGroupTheme))
                ) && 
                (
                    this.DestinyMembershipTypes == input.DestinyMembershipTypes ||
                    this.DestinyMembershipTypes != null &&
                    input.DestinyMembershipTypes != null &&
                    this.DestinyMembershipTypes.SequenceEqual(input.DestinyMembershipTypes)
                ) && 
                (
                    this.RecruitmentPlatformTags == input.RecruitmentPlatformTags ||
                    this.RecruitmentPlatformTags != null &&
                    input.RecruitmentPlatformTags != null &&
                    this.RecruitmentPlatformTags.SequenceEqual(input.RecruitmentPlatformTags)
                ) && 
                (
                    this.RecruitmentMiscTags == input.RecruitmentMiscTags ||
                    this.RecruitmentMiscTags != null &&
                    input.RecruitmentMiscTags != null &&
                    this.RecruitmentMiscTags.SequenceEqual(input.RecruitmentMiscTags)
                ) && 
                (
                    this.RecruitmentActivities == input.RecruitmentActivities ||
                    this.RecruitmentActivities != null &&
                    input.RecruitmentActivities != null &&
                    this.RecruitmentActivities.SequenceEqual(input.RecruitmentActivities)
                ) && 
                (
                    this.UserContentLocales == input.UserContentLocales ||
                    this.UserContentLocales != null &&
                    input.UserContentLocales != null &&
                    this.UserContentLocales.SequenceEqual(input.UserContentLocales)
                ) && 
                (
                    this.SystemContentLocales == input.SystemContentLocales ||
                    this.SystemContentLocales != null &&
                    input.SystemContentLocales != null &&
                    this.SystemContentLocales.SequenceEqual(input.SystemContentLocales)
                ) && 
                (
                    this.ClanBannerDecals == input.ClanBannerDecals ||
                    this.ClanBannerDecals != null &&
                    input.ClanBannerDecals != null &&
                    this.ClanBannerDecals.SequenceEqual(input.ClanBannerDecals)
                ) && 
                (
                    this.ClanBannerDecalColors == input.ClanBannerDecalColors ||
                    this.ClanBannerDecalColors != null &&
                    input.ClanBannerDecalColors != null &&
                    this.ClanBannerDecalColors.SequenceEqual(input.ClanBannerDecalColors)
                ) && 
                (
                    this.ClanBannerGonfalons == input.ClanBannerGonfalons ||
                    this.ClanBannerGonfalons != null &&
                    input.ClanBannerGonfalons != null &&
                    this.ClanBannerGonfalons.SequenceEqual(input.ClanBannerGonfalons)
                ) && 
                (
                    this.ClanBannerGonfalonColors == input.ClanBannerGonfalonColors ||
                    this.ClanBannerGonfalonColors != null &&
                    input.ClanBannerGonfalonColors != null &&
                    this.ClanBannerGonfalonColors.SequenceEqual(input.ClanBannerGonfalonColors)
                ) && 
                (
                    this.ClanBannerGonfalonDetails == input.ClanBannerGonfalonDetails ||
                    this.ClanBannerGonfalonDetails != null &&
                    input.ClanBannerGonfalonDetails != null &&
                    this.ClanBannerGonfalonDetails.SequenceEqual(input.ClanBannerGonfalonDetails)
                ) && 
                (
                    this.ClanBannerGonfalonDetailColors == input.ClanBannerGonfalonDetailColors ||
                    this.ClanBannerGonfalonDetailColors != null &&
                    input.ClanBannerGonfalonDetailColors != null &&
                    this.ClanBannerGonfalonDetailColors.SequenceEqual(input.ClanBannerGonfalonDetailColors)
                ) && 
                (
                    this.ClanBannerStandards == input.ClanBannerStandards ||
                    this.ClanBannerStandards != null &&
                    input.ClanBannerStandards != null &&
                    this.ClanBannerStandards.SequenceEqual(input.ClanBannerStandards)
                ) && 
                (
                    this.Destiny2CoreSettings == input.Destiny2CoreSettings ||
                    (this.Destiny2CoreSettings != null &&
                    this.Destiny2CoreSettings.Equals(input.Destiny2CoreSettings))
                ) && 
                (
                    this.EmailSettings == input.EmailSettings ||
                    (this.EmailSettings != null &&
                    this.EmailSettings.Equals(input.EmailSettings))
                ) && 
                (
                    this.FireteamActivities == input.FireteamActivities ||
                    this.FireteamActivities != null &&
                    input.FireteamActivities != null &&
                    this.FireteamActivities.SequenceEqual(input.FireteamActivities)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.VarEnvironment != null)
                {
                    hashCode = (hashCode * 59) + this.VarEnvironment.GetHashCode();
                }
                if (this.Systems != null)
                {
                    hashCode = (hashCode * 59) + this.Systems.GetHashCode();
                }
                if (this.IgnoreReasons != null)
                {
                    hashCode = (hashCode * 59) + this.IgnoreReasons.GetHashCode();
                }
                if (this.ForumCategories != null)
                {
                    hashCode = (hashCode * 59) + this.ForumCategories.GetHashCode();
                }
                if (this.GroupAvatars != null)
                {
                    hashCode = (hashCode * 59) + this.GroupAvatars.GetHashCode();
                }
                if (this.DefaultGroupTheme != null)
                {
                    hashCode = (hashCode * 59) + this.DefaultGroupTheme.GetHashCode();
                }
                if (this.DestinyMembershipTypes != null)
                {
                    hashCode = (hashCode * 59) + this.DestinyMembershipTypes.GetHashCode();
                }
                if (this.RecruitmentPlatformTags != null)
                {
                    hashCode = (hashCode * 59) + this.RecruitmentPlatformTags.GetHashCode();
                }
                if (this.RecruitmentMiscTags != null)
                {
                    hashCode = (hashCode * 59) + this.RecruitmentMiscTags.GetHashCode();
                }
                if (this.RecruitmentActivities != null)
                {
                    hashCode = (hashCode * 59) + this.RecruitmentActivities.GetHashCode();
                }
                if (this.UserContentLocales != null)
                {
                    hashCode = (hashCode * 59) + this.UserContentLocales.GetHashCode();
                }
                if (this.SystemContentLocales != null)
                {
                    hashCode = (hashCode * 59) + this.SystemContentLocales.GetHashCode();
                }
                if (this.ClanBannerDecals != null)
                {
                    hashCode = (hashCode * 59) + this.ClanBannerDecals.GetHashCode();
                }
                if (this.ClanBannerDecalColors != null)
                {
                    hashCode = (hashCode * 59) + this.ClanBannerDecalColors.GetHashCode();
                }
                if (this.ClanBannerGonfalons != null)
                {
                    hashCode = (hashCode * 59) + this.ClanBannerGonfalons.GetHashCode();
                }
                if (this.ClanBannerGonfalonColors != null)
                {
                    hashCode = (hashCode * 59) + this.ClanBannerGonfalonColors.GetHashCode();
                }
                if (this.ClanBannerGonfalonDetails != null)
                {
                    hashCode = (hashCode * 59) + this.ClanBannerGonfalonDetails.GetHashCode();
                }
                if (this.ClanBannerGonfalonDetailColors != null)
                {
                    hashCode = (hashCode * 59) + this.ClanBannerGonfalonDetailColors.GetHashCode();
                }
                if (this.ClanBannerStandards != null)
                {
                    hashCode = (hashCode * 59) + this.ClanBannerStandards.GetHashCode();
                }
                if (this.Destiny2CoreSettings != null)
                {
                    hashCode = (hashCode * 59) + this.Destiny2CoreSettings.GetHashCode();
                }
                if (this.EmailSettings != null)
                {
                    hashCode = (hashCode * 59) + this.EmailSettings.GetHashCode();
                }
                if (this.FireteamActivities != null)
                {
                    hashCode = (hashCode * 59) + this.FireteamActivities.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
