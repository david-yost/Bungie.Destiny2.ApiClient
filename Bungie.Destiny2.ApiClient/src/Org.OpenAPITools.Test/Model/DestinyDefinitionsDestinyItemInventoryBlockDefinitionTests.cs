/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing DestinyDefinitionsDestinyItemInventoryBlockDefinition
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DestinyDefinitionsDestinyItemInventoryBlockDefinitionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DestinyDefinitionsDestinyItemInventoryBlockDefinition
        //private DestinyDefinitionsDestinyItemInventoryBlockDefinition instance;

        public DestinyDefinitionsDestinyItemInventoryBlockDefinitionTests()
        {
            // TODO uncomment below to create an instance of DestinyDefinitionsDestinyItemInventoryBlockDefinition
            //instance = new DestinyDefinitionsDestinyItemInventoryBlockDefinition();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DestinyDefinitionsDestinyItemInventoryBlockDefinition
        /// </summary>
        [Fact]
        public void DestinyDefinitionsDestinyItemInventoryBlockDefinitionInstanceTest()
        {
            // TODO uncomment below to test "IsType" DestinyDefinitionsDestinyItemInventoryBlockDefinition
            //Assert.IsType<DestinyDefinitionsDestinyItemInventoryBlockDefinition>(instance);
        }

        /// <summary>
        /// Test the property 'StackUniqueLabel'
        /// </summary>
        [Fact]
        public void StackUniqueLabelTest()
        {
            // TODO unit test for the property 'StackUniqueLabel'
        }

        /// <summary>
        /// Test the property 'MaxStackSize'
        /// </summary>
        [Fact]
        public void MaxStackSizeTest()
        {
            // TODO unit test for the property 'MaxStackSize'
        }

        /// <summary>
        /// Test the property 'BucketTypeHash'
        /// </summary>
        [Fact]
        public void BucketTypeHashTest()
        {
            // TODO unit test for the property 'BucketTypeHash'
        }

        /// <summary>
        /// Test the property 'RecoveryBucketTypeHash'
        /// </summary>
        [Fact]
        public void RecoveryBucketTypeHashTest()
        {
            // TODO unit test for the property 'RecoveryBucketTypeHash'
        }

        /// <summary>
        /// Test the property 'TierTypeHash'
        /// </summary>
        [Fact]
        public void TierTypeHashTest()
        {
            // TODO unit test for the property 'TierTypeHash'
        }

        /// <summary>
        /// Test the property 'IsInstanceItem'
        /// </summary>
        [Fact]
        public void IsInstanceItemTest()
        {
            // TODO unit test for the property 'IsInstanceItem'
        }

        /// <summary>
        /// Test the property 'TierTypeName'
        /// </summary>
        [Fact]
        public void TierTypeNameTest()
        {
            // TODO unit test for the property 'TierTypeName'
        }

        /// <summary>
        /// Test the property 'TierType'
        /// </summary>
        [Fact]
        public void TierTypeTest()
        {
            // TODO unit test for the property 'TierType'
        }

        /// <summary>
        /// Test the property 'ExpirationTooltip'
        /// </summary>
        [Fact]
        public void ExpirationTooltipTest()
        {
            // TODO unit test for the property 'ExpirationTooltip'
        }

        /// <summary>
        /// Test the property 'ExpiredInActivityMessage'
        /// </summary>
        [Fact]
        public void ExpiredInActivityMessageTest()
        {
            // TODO unit test for the property 'ExpiredInActivityMessage'
        }

        /// <summary>
        /// Test the property 'ExpiredInOrbitMessage'
        /// </summary>
        [Fact]
        public void ExpiredInOrbitMessageTest()
        {
            // TODO unit test for the property 'ExpiredInOrbitMessage'
        }

        /// <summary>
        /// Test the property 'SuppressExpirationWhenObjectivesComplete'
        /// </summary>
        [Fact]
        public void SuppressExpirationWhenObjectivesCompleteTest()
        {
            // TODO unit test for the property 'SuppressExpirationWhenObjectivesComplete'
        }

        /// <summary>
        /// Test the property 'RecipeItemHash'
        /// </summary>
        [Fact]
        public void RecipeItemHashTest()
        {
            // TODO unit test for the property 'RecipeItemHash'
        }
    }
}
