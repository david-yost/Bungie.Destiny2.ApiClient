/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing DestinyDefinitionsDestinyVendorCategoryEntryDefinition
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DestinyDefinitionsDestinyVendorCategoryEntryDefinitionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DestinyDefinitionsDestinyVendorCategoryEntryDefinition
        //private DestinyDefinitionsDestinyVendorCategoryEntryDefinition instance;

        public DestinyDefinitionsDestinyVendorCategoryEntryDefinitionTests()
        {
            // TODO uncomment below to create an instance of DestinyDefinitionsDestinyVendorCategoryEntryDefinition
            //instance = new DestinyDefinitionsDestinyVendorCategoryEntryDefinition();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DestinyDefinitionsDestinyVendorCategoryEntryDefinition
        /// </summary>
        [Fact]
        public void DestinyDefinitionsDestinyVendorCategoryEntryDefinitionInstanceTest()
        {
            // TODO uncomment below to test "IsType" DestinyDefinitionsDestinyVendorCategoryEntryDefinition
            //Assert.IsType<DestinyDefinitionsDestinyVendorCategoryEntryDefinition>(instance);
        }

        /// <summary>
        /// Test the property 'CategoryIndex'
        /// </summary>
        [Fact]
        public void CategoryIndexTest()
        {
            // TODO unit test for the property 'CategoryIndex'
        }

        /// <summary>
        /// Test the property 'SortValue'
        /// </summary>
        [Fact]
        public void SortValueTest()
        {
            // TODO unit test for the property 'SortValue'
        }

        /// <summary>
        /// Test the property 'CategoryHash'
        /// </summary>
        [Fact]
        public void CategoryHashTest()
        {
            // TODO unit test for the property 'CategoryHash'
        }

        /// <summary>
        /// Test the property 'QuantityAvailable'
        /// </summary>
        [Fact]
        public void QuantityAvailableTest()
        {
            // TODO unit test for the property 'QuantityAvailable'
        }

        /// <summary>
        /// Test the property 'ShowUnavailableItems'
        /// </summary>
        [Fact]
        public void ShowUnavailableItemsTest()
        {
            // TODO unit test for the property 'ShowUnavailableItems'
        }

        /// <summary>
        /// Test the property 'HideIfNoCurrency'
        /// </summary>
        [Fact]
        public void HideIfNoCurrencyTest()
        {
            // TODO unit test for the property 'HideIfNoCurrency'
        }

        /// <summary>
        /// Test the property 'HideFromRegularPurchase'
        /// </summary>
        [Fact]
        public void HideFromRegularPurchaseTest()
        {
            // TODO unit test for the property 'HideFromRegularPurchase'
        }

        /// <summary>
        /// Test the property 'BuyStringOverride'
        /// </summary>
        [Fact]
        public void BuyStringOverrideTest()
        {
            // TODO unit test for the property 'BuyStringOverride'
        }

        /// <summary>
        /// Test the property 'DisabledDescription'
        /// </summary>
        [Fact]
        public void DisabledDescriptionTest()
        {
            // TODO unit test for the property 'DisabledDescription'
        }

        /// <summary>
        /// Test the property 'DisplayTitle'
        /// </summary>
        [Fact]
        public void DisplayTitleTest()
        {
            // TODO unit test for the property 'DisplayTitle'
        }

        /// <summary>
        /// Test the property 'Overlay'
        /// </summary>
        [Fact]
        public void OverlayTest()
        {
            // TODO unit test for the property 'Overlay'
        }

        /// <summary>
        /// Test the property 'VendorItemIndexes'
        /// </summary>
        [Fact]
        public void VendorItemIndexesTest()
        {
            // TODO unit test for the property 'VendorItemIndexes'
        }

        /// <summary>
        /// Test the property 'IsPreview'
        /// </summary>
        [Fact]
        public void IsPreviewTest()
        {
            // TODO unit test for the property 'IsPreview'
        }

        /// <summary>
        /// Test the property 'IsDisplayOnly'
        /// </summary>
        [Fact]
        public void IsDisplayOnlyTest()
        {
            // TODO unit test for the property 'IsDisplayOnly'
        }

        /// <summary>
        /// Test the property 'ResetIntervalMinutesOverride'
        /// </summary>
        [Fact]
        public void ResetIntervalMinutesOverrideTest()
        {
            // TODO unit test for the property 'ResetIntervalMinutesOverride'
        }

        /// <summary>
        /// Test the property 'ResetOffsetMinutesOverride'
        /// </summary>
        [Fact]
        public void ResetOffsetMinutesOverrideTest()
        {
            // TODO unit test for the property 'ResetOffsetMinutesOverride'
        }
    }
}
