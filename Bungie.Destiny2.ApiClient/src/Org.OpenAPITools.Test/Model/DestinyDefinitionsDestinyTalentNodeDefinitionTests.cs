/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing DestinyDefinitionsDestinyTalentNodeDefinition
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DestinyDefinitionsDestinyTalentNodeDefinitionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DestinyDefinitionsDestinyTalentNodeDefinition
        //private DestinyDefinitionsDestinyTalentNodeDefinition instance;

        public DestinyDefinitionsDestinyTalentNodeDefinitionTests()
        {
            // TODO uncomment below to create an instance of DestinyDefinitionsDestinyTalentNodeDefinition
            //instance = new DestinyDefinitionsDestinyTalentNodeDefinition();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DestinyDefinitionsDestinyTalentNodeDefinition
        /// </summary>
        [Fact]
        public void DestinyDefinitionsDestinyTalentNodeDefinitionInstanceTest()
        {
            // TODO uncomment below to test "IsType" DestinyDefinitionsDestinyTalentNodeDefinition
            //Assert.IsType<DestinyDefinitionsDestinyTalentNodeDefinition>(instance);
        }

        /// <summary>
        /// Test the property 'NodeIndex'
        /// </summary>
        [Fact]
        public void NodeIndexTest()
        {
            // TODO unit test for the property 'NodeIndex'
        }

        /// <summary>
        /// Test the property 'NodeHash'
        /// </summary>
        [Fact]
        public void NodeHashTest()
        {
            // TODO unit test for the property 'NodeHash'
        }

        /// <summary>
        /// Test the property 'Row'
        /// </summary>
        [Fact]
        public void RowTest()
        {
            // TODO unit test for the property 'Row'
        }

        /// <summary>
        /// Test the property 'Column'
        /// </summary>
        [Fact]
        public void ColumnTest()
        {
            // TODO unit test for the property 'Column'
        }

        /// <summary>
        /// Test the property 'PrerequisiteNodeIndexes'
        /// </summary>
        [Fact]
        public void PrerequisiteNodeIndexesTest()
        {
            // TODO unit test for the property 'PrerequisiteNodeIndexes'
        }

        /// <summary>
        /// Test the property 'BinaryPairNodeIndex'
        /// </summary>
        [Fact]
        public void BinaryPairNodeIndexTest()
        {
            // TODO unit test for the property 'BinaryPairNodeIndex'
        }

        /// <summary>
        /// Test the property 'AutoUnlocks'
        /// </summary>
        [Fact]
        public void AutoUnlocksTest()
        {
            // TODO unit test for the property 'AutoUnlocks'
        }

        /// <summary>
        /// Test the property 'LastStepRepeats'
        /// </summary>
        [Fact]
        public void LastStepRepeatsTest()
        {
            // TODO unit test for the property 'LastStepRepeats'
        }

        /// <summary>
        /// Test the property 'IsRandom'
        /// </summary>
        [Fact]
        public void IsRandomTest()
        {
            // TODO unit test for the property 'IsRandom'
        }

        /// <summary>
        /// Test the property 'RandomActivationRequirement'
        /// </summary>
        [Fact]
        public void RandomActivationRequirementTest()
        {
            // TODO unit test for the property 'RandomActivationRequirement'
        }

        /// <summary>
        /// Test the property 'IsRandomRepurchasable'
        /// </summary>
        [Fact]
        public void IsRandomRepurchasableTest()
        {
            // TODO unit test for the property 'IsRandomRepurchasable'
        }

        /// <summary>
        /// Test the property 'Steps'
        /// </summary>
        [Fact]
        public void StepsTest()
        {
            // TODO unit test for the property 'Steps'
        }

        /// <summary>
        /// Test the property 'ExclusiveWithNodeHashes'
        /// </summary>
        [Fact]
        public void ExclusiveWithNodeHashesTest()
        {
            // TODO unit test for the property 'ExclusiveWithNodeHashes'
        }

        /// <summary>
        /// Test the property 'RandomStartProgressionBarAtProgression'
        /// </summary>
        [Fact]
        public void RandomStartProgressionBarAtProgressionTest()
        {
            // TODO unit test for the property 'RandomStartProgressionBarAtProgression'
        }

        /// <summary>
        /// Test the property 'LayoutIdentifier'
        /// </summary>
        [Fact]
        public void LayoutIdentifierTest()
        {
            // TODO unit test for the property 'LayoutIdentifier'
        }

        /// <summary>
        /// Test the property 'GroupHash'
        /// </summary>
        [Fact]
        public void GroupHashTest()
        {
            // TODO unit test for the property 'GroupHash'
        }

        /// <summary>
        /// Test the property 'LoreHash'
        /// </summary>
        [Fact]
        public void LoreHashTest()
        {
            // TODO unit test for the property 'LoreHash'
        }

        /// <summary>
        /// Test the property 'NodeStyleIdentifier'
        /// </summary>
        [Fact]
        public void NodeStyleIdentifierTest()
        {
            // TODO unit test for the property 'NodeStyleIdentifier'
        }

        /// <summary>
        /// Test the property 'IgnoreForCompletion'
        /// </summary>
        [Fact]
        public void IgnoreForCompletionTest()
        {
            // TODO unit test for the property 'IgnoreForCompletion'
        }
    }
}
